

// ____________________________________________________ 使用模板获取数组长度____________________________________________________



// 我想在函数里面获取数组的长度，类似这样
template<int N>
void func(int A[N]){
    cout << N << endl;
}

// 但是这样写会报错，我写成下面这个样子之后就可以用了
template<int N>
void func2(int (&A)[N]){
  cout << N << endl;
}

// 我的疑问是这里的 "&"，是代表什么呢？恳请各位大大解答下疑惑。


/*
  这一个问题和前段时间一位朋友私信问我的问题很像，只是他的问题是模板如何区分出指针和数组。
  所以，其实这里的关键是如何防止数组被转化为指针。

  而这里的int (&A) [N]其实就是防止arr（假如有个名叫arr的int数组）作为参数传递时被转为int*，
  因为数组是不能值传递的，于是以引用的方式就改变了值传递的特点，变为引用传递，也就不会转为int*了。
*/


/*
  数组只有在 sizeof，取地址&，和引用&的时候不会退化成指针
*/ 

// 实际使用

// 获取数组的长度
/*
	T 可以是 std::string， 也可以是 int 类型
*/
template<int N, typename T>
int getArrayNumHXT(const T (&A)[N]){
	return N;
}  